{"version":3,"sources":["context/auth/authContext.js","context/types.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/clients/clientsContext.js","context/clients/clientsReducer.js","context/clients/ClientsState.js","context/csv/csvContext.js","context/csv/csvReducer.js","context/csv/CsvState.js","context/users/usersContext.js","context/users/usersReducer.js","context/users/UsersState.js","components/Menu.js","components/ClientsAll.js","components/ClientsOverview.js","components/Footer.js","img/shibunkaku_logo.svg","components/Header.js","components/Users.js","components/Home.js","components/Alerts.js","components/Login.js","components/NotFound.js","components/routing/PrivateRoute.js","App.js","index.js"],"names":["authContext","createContext","ADMIN_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","GET_CLIENTS","DELETE_CLIENTS","CLIENTS_ERROR","CLEAR_CLIENTS","GET_USERS","SET_CURRENT","USERS_ERROR","CLEAR_USERS","GENERATE_CSV","GENERATE_CSV_ONEUSER","CLEAR_CSV","authReducer","state","action","type","isAuthenticated","loading","admin","payload","localStorage","setItem","token","removeItem","error","errFiltered","undefined","forEach","item","filter","err","id","console","log","setAuthToken","axios","defaults","headers","common","AuthState","props","initialState","getItem","useReducer","dispatch","loadAdmin","a","get","res","data","login","formData","config","post","clearErrors","response","errors","setTimeout","Provider","value","logout","children","clientsContext","clientsReducer","clients","ClientState","getClients","msg","deleteClients","delete","clearClients","csvContext","csvReducer","csv","csvAll","todaysDate","CsvState","addressFieldChecks","returnValue","slice","substring","generate","today","Date","date","getFullYear","getMonth","getDate","gyomuArray","arrayToPush","counter","client","num","whatTo","arr","i","push","repeat","toString","clientName","company","val","toLowerCase","Object","keys","codes","includes","countryCode","country","replaceAll","email","greeting","incharge","industry","mobile","notes","position","reviewAddressLine1","reviewAddressLine2","tel","wanobi","generateCsv","generateCsvForOne","user","clearCsv","usersContext","usersReducer","users","currentUser","UsersState","getUsers","clearUsers","setCurrentUser","current","Menu","useContext","AuthContext","UsersContext","ClientsContext","CsvContext","location","useLocation","useState","dbWarning","setDbWarning","dbResetConfirm","setDbResetConfirm","dbResetComplete","setDbResetComplete","Modal","setAppElement","className","isOpen","onRequestClose","style","defaultModal","onClick","to","filename","pathname","split","toUpperCase","overlay","backgroundColor","content","border","textAlign","margin","height","width","display","justifyContent","flexDirection","ClientsAll","useEffect","filteredClients","_partition","length","map","name","_id","marginTop","marginBottom","ClientsOverview","currentUserLocal","filtered","Footer","Header","src","Logo","alt","Users","Home","Alerts","fontSize","Login","password","setAdmin","history","onChange","e","target","onSubmit","preventDefault","placeholder","NotFound","PrivateRoute","Component","component","rest","render","App","ClientsState","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.678fd6f6.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst authContext = createContext();\n\nexport default authContext;","// authentication\nexport const ADMIN_LOADED = 'ADMIN_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// clients\nexport const GET_CLIENTS = 'GET_CLIENTS';\nexport const DELETE_CLIENTS = 'DELETE_CLIENTS';\nexport const CLIENTS_ERROR = 'CLIENTS_ERROR';\nexport const CLEAR_CLIENTS = 'CLEAR_CLIENTS';\n\n// users\nexport const GET_USERS = 'GET_USERS';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const USERS_ERROR = 'USERS_ERROR';\nexport const CLEAR_USERS = 'CLEAR_USERS';\n\n//csv\nexport const GENERATE_CSV = 'GENERATE_CSV';\nexport const GENERATE_CSV_ONEUSER = 'GENERATE_CSV_ONEUSER';\nexport const CLEAR_CSV = 'CLEAR_CSV';\n// export const CLEAR_CSV_ONEUSER = 'CLEAR_CSV_ONEUSER';\n","import { ADMIN_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst authReducer = (state, action) => {\n    switch (action.type) {\n        case ADMIN_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                admin: action.payload,\n            };\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case LOGIN_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                admin: null,\n                error: action.payload,\n            };\n        case AUTH_ERROR:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                admin: null,\n                error: null,\n            };\n        case CLEAR_ERRORS:\n            if (!action.payload) {\n                // console.log('no payload');\n                return {\n                    ...state,\n                    error: null,\n                };\n            }\n\n            let errFiltered = null;\n\n            if (state.error) {\n                errFiltered = action.payload.forEach(item => state.error.filter(err => err.id !== item));\n                if (errFiltered === undefined) {\n                    errFiltered = null;\n                }\n\n                console.log('errFiltered', errFiltered);\n            }\n\n            return {\n                ...state,\n                error: errFiltered,\n                // error: state.error.filter(err => err.id !== action.payload[0]),\n\n                // error: action.payload.forEach(item => state.error.filter(err => err.id !== item)),\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;","import { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: false,\n        loading: true,\n        admin: null,\n        error: null,\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    // load admin\n    const loadAdmin = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token);\n        }\n\n        try {\n            const res = await axios.get('/api/auth');\n            dispatch({\n                type: ADMIN_LOADED,\n                payload: res.data,\n            });\n        } catch (err) {\n            dispatch({\n                type: AUTH_ERROR,\n            });\n        }\n    };\n\n    // login admin\n    const login = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const res = await axios.post('/api/auth', formData, config);\n            clearErrors();\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n            // loadAdmin();\n        } catch (err) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.errors,\n            });\n\n            // console.log(err.response.data.errors.map(err => err.id));\n            // setTimeout(\n            //     () =>\n            //         dispatch({\n            //             type: CLEAR_ERRORS,\n            //             payload: err.response.data.errors.map(err => err.id),\n            //         }),\n            //     4000\n            // );\n            setTimeout(() => clearErrors(), 5000);\n            // clearErrors();\n        }\n    };\n\n    // logout admin\n    const logout = () => {\n        dispatch({ type: LOGOUT });\n    };\n\n    // clear errors\n    const clearErrors = () => {\n        dispatch({ type: CLEAR_ERRORS });\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                admin: null,\n                error: state.error,\n                loadAdmin,\n                login,\n                logout,\n                clearErrors,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;\n","import { createContext } from 'react'\n\nconst clientsContext = createContext();\n\nexport default clientsContext;","import { GET_CLIENTS, DELETE_CLIENTS, CLIENTS_ERROR, CLEAR_CLIENTS } from '../types';\n\nconst clientsReducer = (state, action) => {\n    switch (action.type) {\n        case GET_CLIENTS:\n            return {\n                ...state,\n                clients: action.payload,\n                loading: false,\n            };\n        case DELETE_CLIENTS:\n            return {\n                clients: [],\n                error: null,\n                loading: false,\n            };\n        case CLIENTS_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case CLEAR_CLIENTS:\n            return {\n                ...state,\n                clients: null,\n                error: null,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default clientsReducer;\n","import { useReducer } from 'react';\nimport ClientsContext from './clientsContext';\nimport clientsReducer from './clientsReducer';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport { GET_CLIENTS, DELETE_CLIENTS, CLIENTS_ERROR, CLEAR_CLIENTS } from '../types';\n\nconst ClientState = props => {\n    const initialState = {\n        clients: null,\n        error: null,\n        loading: true,\n    };\n\n    const [state, dispatch] = useReducer(clientsReducer, initialState);\n\n    // get clients\n    const getClients = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token);\n        }\n\n        try {\n            const res = await axios.get('/api/clients');\n            dispatch({ type: GET_CLIENTS, payload: res.data });\n        } catch (err) {\n            dispatch({\n                type: CLIENTS_ERROR,\n                payload: err.response.msg,\n            });\n        }\n    };\n\n    // delete clients\n    const deleteClients = async () => {\n        await axios.delete('/api/clients');\n        dispatch({ type: DELETE_CLIENTS });\n    };\n\n    const clearClients = () => {\n        dispatch({ type: CLEAR_CLIENTS });\n    };\n\n    return (\n        <ClientsContext.Provider\n            value={{\n                clients: state.clients,\n                error: state.error,\n                getClients,\n                deleteClients,\n                clearClients,\n            }}\n        >\n            {props.children}\n        </ClientsContext.Provider>\n    );\n};\n\nexport default ClientState;\n","import { createContext } from 'react';\n\nconst csvContext = createContext();\n\nexport default csvContext;\n","import { GENERATE_CSV, CLEAR_CSV, GENERATE_CSV_ONEUSER } from '../types';\n\nconst csvReducer = (state, action) => {\n    switch (action.type) {\n        case GENERATE_CSV:\n            return {\n                ...state,\n                csv: [],\n                csvAll: action.payload[0],\n                todaysDate: action.payload[1],\n            };\n        case GENERATE_CSV_ONEUSER:\n            return {\n                ...state,\n                csv: action.payload[0],\n                todaysDate: action.payload[1],\n            };\n        case CLEAR_CSV:\n            return {\n                ...state,\n                csv: [],\n                csvAll: [],\n                todaysDate: null,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default csvReducer;\n","import { useReducer } from 'react';\nimport CsvContext from './csvContext';\nimport csvReducer from './csvReducer';\nimport codes from '../../utils/country_codes.json';\n\nimport { GENERATE_CSV, CLEAR_CSV, GENERATE_CSV_ONEUSER } from '../types';\n\nconst CsvState = props => {\n    const initialState = {\n        csv: [],\n        csvAll: [],\n        todaysDate: null,\n    };\n\n    const [state, dispatch] = useReducer(csvReducer, initialState);\n\n    // CSV helper functions\n    const repeat = (num, whatTo) => {\n        var arr = [];\n        for (var i = 0; i < num; i++) {\n            arr.push(whatTo);\n        }\n        return arr;\n    };\n\n    const addressFieldChecks = item => {\n        let returnValue;\n        if (item === ', ') {\n            returnValue = '';\n        } else if (item.slice(-2) === ', ') {\n            returnValue = item.slice(0, -2);\n        } else if (item.substring(0, 2) === ', ') {\n            returnValue = item.slice(2);\n        } else return item;\n        return returnValue;\n    };\n\n    const countryCode = value => {\n        const val = value.toLowerCase();\n        if (Object.keys(codes).includes(val) === false) {\n            return value;\n        }\n        return codes[val];\n    };\n\n    const generate = clients => {\n        const today = new Date();\n        const date = today.getFullYear() + ('0' + (today.getMonth() + 1)).slice(-2) + today.getDate();\n\n        let gyomuArray = [\n            [\n                'No',\n                '日付',\n                '顧客＃',\n                '担当',\n                '敬称',\n                '顧客名',\n                '業界',\n                'メールアドレス',\n                '国（在）',\n                '住所 line 1',\n                '住所 line 2',\n                '住所 ZIP code',\n                '勤務先 line 1',\n                '勤務先 line 2',\n                '勤務先 ZIP code',\n                '役職',\n                'Tel.',\n                'Mobile',\n                'FAX',\n                'Tel. (Work)',\n                'Mobile (Work)',\n                'FAX (Work)',\n                '備考',\n                'Wanobi catalog',\n                'Catalog Home',\n                'Catalog Office',\n                '会社名 Company',\n                'キーワード Keyword',\n            ],\n        ];\n\n        let arrayToPush = [];\n\n        let counter = 0;\n        clients.forEach(client => {\n            counter += 1;\n            arrayToPush = repeat(28, '');\n            arrayToPush[0] = counter.toString();\n            arrayToPush[5] = client.clientName;\n            arrayToPush[26] = client.company;\n            arrayToPush[8] = countryCode(client.country);\n            arrayToPush[1] = client.date.slice(0, 10).replaceAll('-', '/');\n            arrayToPush[7] = client.email;\n            arrayToPush[4] = client.greeting;\n            arrayToPush[3] = client.incharge;\n            arrayToPush[6] = client.industry;\n            arrayToPush[17] = client.mobile;\n            arrayToPush[22] = client.notes;\n            arrayToPush[15] = client.position;\n            arrayToPush[9] = addressFieldChecks(client.reviewAddressLine1);\n            arrayToPush[10] = addressFieldChecks(client.reviewAddressLine2);\n            arrayToPush[16] = client.tel;\n            if (client.wanobi === '1') {\n                arrayToPush[23] = 'TRUE';\n            } else {\n                arrayToPush[23] = 'FALSE';\n            }\n\n            gyomuArray.push(arrayToPush);\n        });\n\n        return [gyomuArray, date];\n    };\n\n    // generate CSV\n    const generateCsv = clients => {\n        const data = generate(clients);\n\n        dispatch({ type: GENERATE_CSV, payload: data });\n    };\n\n    // clear CSV\n    const clearCsv = () => {\n        dispatch({ type: CLEAR_CSV });\n    };\n\n    // generate CSV for one user\n    const generateCsvForOne = (clients, user) => {\n        const data = generate(clients);\n\n        dispatch({ type: GENERATE_CSV_ONEUSER, payload: data });\n    };\n\n    return (\n        <CsvContext.Provider\n            value={{\n                csv: state.csv,\n                csvAll: state.csvAll,\n                todaysDate: state.todaysDate,\n                generateCsv,\n                generateCsvForOne,\n                clearCsv,\n            }}\n        >\n            {props.children}\n        </CsvContext.Provider>\n    );\n};\n\nexport default CsvState;\n","import { createContext } from 'react'\n\nconst usersContext = createContext();\n\nexport default usersContext;","import { GET_USERS, USERS_ERROR, CLEAR_USERS, SET_CURRENT } from '../types';\n\nconst usersReducer = (state, action) => {\n    switch (action.type) {\n        case GET_USERS:\n            return {\n                ...state,\n                users: action.payload,\n                loading: false,\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                currentUser: action.payload,\n            };\n        case USERS_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case CLEAR_USERS:\n            return {\n                ...state,\n                users: null,\n                error: null,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default usersReducer;\n","import { useReducer } from 'react';\nimport UsersContext from './usersContext';\nimport usersReducer from './usersReducer';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport { CLEAR_USERS, GET_USERS, USERS_ERROR, SET_CURRENT } from '../types';\n\nconst UsersState = props => {\n    const initialState = {\n        users: null,\n        error: null,\n        currentUser: null,\n    };\n\n    const [state, dispatch] = useReducer(usersReducer, initialState);\n\n    // functions\n    const getUsers = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token);\n        }\n\n        try {\n            const res = await axios.get('/api/users');\n            dispatch({ type: GET_USERS, payload: res.data });\n        } catch (err) {\n            dispatch({\n                type: USERS_ERROR,\n                payload: err.response.msg,\n            });\n        }\n    };\n\n    const setCurrentUser = current => {\n        dispatch({\n            type: SET_CURRENT,\n            payload: current,\n        });\n    };\n\n    const clearUsers = () => {\n        dispatch({ type: CLEAR_USERS });\n    };\n\n    return (\n        <UsersContext.Provider\n            value={{\n                users: state.users,\n                error: state.error,\n                currentUser: state.currentUser,\n                getUsers,\n                clearUsers,\n                setCurrentUser,\n            }}\n        >\n            {props.children}\n        </UsersContext.Provider>\n    );\n};\n\nexport default UsersState;\n","import { useContext, useState } from 'react';\nimport { CSVLink } from 'react-csv';\nimport { Link, useLocation } from 'react-router-dom';\nimport AuthContext from '../context/auth/authContext';\nimport UsersContext from '../context/users/usersContext';\nimport ClientsContext from '../context/clients/clientsContext';\nimport CsvContext from '../context/csv/csvContext';\nimport Modal from 'react-modal';\n\nconst Menu = () => {\n    const authContext = useContext(AuthContext);\n    const usersContext = useContext(UsersContext);\n    const clientsContext = useContext(ClientsContext);\n    const csvContext = useContext(CsvContext);\n\n    const { logout } = authContext;\n    const { clearUsers, currentUser } = usersContext;\n    const { clearClients, deleteClients } = clientsContext;\n    const { csvAll, csv, todaysDate, clearCsv } = csvContext;\n\n    const location = useLocation();\n\n    // could this be consolidated into ONE state?\n    const [dbWarning, setDbWarning] = useState(false);\n    const [dbResetConfirm, setDbResetConfirm] = useState(false);\n    const [dbResetComplete, setDbResetComplete] = useState(false);\n\n    const onLogout = () => {\n        logout();\n        clearUsers();\n        clearClients();\n        clearCsv();\n    };\n\n    const onProceed = () => {\n        setDbWarning(false);\n        setDbResetConfirm(true);\n    };\n\n    const killDatabase = () => {\n        setDbResetConfirm(false);\n        setDbResetComplete(true);\n        clearClients();\n        clearCsv();\n        deleteClients();\n    };\n\n    Modal.setAppElement('#root');\n\n    return (\n        <div className='menu'>\n            {/* Not particularly happy about these modals and the */}\n            {/* apparent necessity to use a constant for styles */}\n            <Modal isOpen={dbWarning} onRequestClose={() => setDbWarning(false)} style={defaultModal}>\n                <div className='modal-content'>\n                    <h2>Warning:</h2>\n                    <p>\n                        Deleting all data cannot be undone.\n                        <br />\n                        Proceed with caution.\n                    </p>\n                    <button onClick={onProceed}>Proceed</button>\n                    <button onClick={() => setDbWarning(false)}>Cancel</button>\n                </div>\n            </Modal>\n            <Modal isOpen={dbResetConfirm} onRequestClose={() => setDbResetConfirm(false)} style={defaultModal}>\n                <div className='modal-content'>\n                    <h2>Reset database?</h2>\n                    <button onClick={killDatabase}>Reset</button>\n                    <button onClick={() => setDbResetConfirm(false)}>Cancel</button>\n                </div>\n            </Modal>\n            <Modal isOpen={dbResetComplete} onRequestClose={() => setDbResetComplete(false)} style={defaultModal}>\n                <div className='modal-content'>\n                    <p className='move-up'>Database has been reset.</p>\n                    <button onClick={() => setDbResetComplete(false)}>Close</button>\n                </div>\n            </Modal>\n\n            <p>\n                <Link to={'/all'}>View All</Link>\n            </p>\n            <p>\n                <CSVLink data={csvAll} filename={`${todaysDate}_sbk-client.csv`}>\n                    Download All\n                </CSVLink>\n            </p>\n            {location.pathname === '/clients' && currentUser && (\n                <p>\n                    <CSVLink data={csv} filename={`${todaysDate}_sbk-client_${currentUser.split('@')[0].toUpperCase()}.csv`}>\n                        Download Current\n                    </CSVLink>\n                </p>\n            )}\n            <p onClick={() => setDbWarning(true)}>Reset Database</p>\n            <p>\n                <button type='button' onClick={onLogout}>\n                    Logout\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default Menu;\n\nconst defaultModal = {\n    overlay: {\n        backgroundColor: 'none',\n    },\n    content: {\n        backgroundColor: '#d9d9d9',\n        border: '1px solid #c7c7c7',\n        textAlign: 'center',\n        margin: 'auto',\n        height: '40vh',\n        width: '50vw',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n};\n","import { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../context/auth/authContext';\nimport ClientsContext from '../context/clients/clientsContext';\nimport UsersContext from '../context/users/usersContext';\nimport CsvContext from '../context/csv/csvContext';\nimport Menu from './Menu';\n\nconst ClientsAll = props => {\n    const authContext = useContext(AuthContext);\n    const usersContext = useContext(UsersContext);\n    const clientsContext = useContext(ClientsContext);\n    const csvContext = useContext(CsvContext);\n\n    const { loadAdmin } = authContext;\n    const { users, getUsers, setCurrentUser, currentUser } = usersContext;\n    const { clients, getClients, loading } = clientsContext;\n    const { generateCsv } = csvContext;\n\n    useEffect(() => {\n        loadAdmin();\n        getUsers();\n        getClients();\n        if (currentUser !== null) {\n            setCurrentUser(null);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (clients) {\n            generateCsv(clients);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const filteredClients = user => {\n        return clients.filter(item => item._partition === user._partition);\n    };\n\n    return (\n        <>\n            <Menu />\n            {clients !== null && users !== null && !loading && (\n                <div className='clients-container'>\n                    {users.length === 0 ? (\n                        <div>No users on file.</div>\n                    ) : (\n                        <>\n                            {users.map(user =>\n                                filteredClients(user).length !== 0 ? (\n                                    <div key={user._id} className='view-all'>\n                                        <div className='clients-table'>User: {user.name}</div>\n                                        {filteredClients(user).map(client => (\n                                            <div key={client._id} className='clients-table'>\n                                                <div>{client.clientName}</div>\n                                                <div>{client.email}</div>\n                                                <div>{client.company}</div>\n                                                <div>{client.position}</div>\n                                                <div>{client.country}</div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (\n                                    <div key={user.name} style={{ marginTop: '2rem', marginBottom: '2rem' }}>\n                                        No clients on file for <strong>{user.name}</strong>.\n                                    </div>\n                                )\n                            )}\n                        </>\n                    )}\n                    <div style={{ marginTop: '1rem' }}>\n                        <Link to='/'>↑ Back to Top</Link>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default ClientsAll;\n","import { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../context/auth/authContext';\nimport ClientsContext from '../context/clients/clientsContext';\nimport UsersContext from '../context/users/usersContext';\nimport CsvContext from '../context/csv/csvContext';\nimport Menu from './Menu';\n\nconst ClientsOverview = props => {\n    const authContext = useContext(AuthContext);\n    const clientsContext = useContext(ClientsContext);\n    const usersContext = useContext(UsersContext);\n    const csvContext = useContext(CsvContext);\n\n    const { loadAdmin } = authContext;\n    const { clients, loading, getClients } = clientsContext;\n    const { users, getUsers, setCurrentUser, currentUser } = usersContext;\n    const { generateCsv, generateCsvForOne } = csvContext;\n\n    useEffect(() => {\n        loadAdmin();\n        getUsers();\n        getClients();\n        if (props.location.state) {\n            setCurrentUser(props.location.state.user.name);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (clients) {\n            generateCsv(clients);\n        }\n        if (clients && users && currentUser) {\n            const currentUserLocal = users.filter(item => item.name === currentUser)[0];\n            const filtered = clients.filter(item => item._partition === currentUserLocal._partition);\n            generateCsvForOne(filtered, currentUserLocal.name);\n        }\n        // eslint-disable-next-line\n    }, [clients, users]);\n\n    let currentUserLocal;\n    let filtered = [];\n\n    if (clients && users && currentUser !== null) {\n        currentUserLocal = users.filter(item => item.name === currentUser)[0];\n        filtered = clients.filter(item => item._partition === currentUserLocal._partition);\n    }\n\n    return (\n        <>\n            <Menu />\n            {clients !== null && users !== null && !loading && currentUser !== null && (\n                <div className='clients-container'>\n                    {filtered.length === 0 ? (\n                        <div style={{ marginBottom: '2rem' }}>\n                            No clients on file for <strong>{currentUserLocal.name}.</strong>\n                        </div>\n                    ) : (\n                        <>\n                            <div className='clients-table'>User: {currentUserLocal.name}</div>\n                            {filtered.map(client => (\n                                <div key={client._id} className='clients-table'>\n                                    <div className=''>{client.clientName}</div>\n                                    <div className=''>{client.email}</div>\n                                    <div className=''>{client.company}</div>\n                                    <div className=''>{client.position}</div>\n                                    <div className=''>{client.country}</div>\n                                </div>\n                            ))}\n                        </>\n                    )}\n                    <div style={{ marginTop: '1rem' }}>\n                        <Link to='/'>↑ Back to Top</Link>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default ClientsOverview;\n","const Footer = () => {\n    return (\n        <div className='footer'>\n            <p>\n                &copy; Shibunkaku Co., Ltd. 2021\n            </p>\n        </div>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/shibunkaku_logo.4c549ebe.svg\";","import Logo from '../img/shibunkaku_logo.svg';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../context/auth/authContext';\n\nconst Header = () => {\n    const authContext = useContext(AuthContext);\n    const { clearErrors } = authContext;\n\n    return (\n        <>\n            <div className='chrome-patch'></div>\n            <div className='header' id='header'>\n                <Link to='/'>\n                    <img src={Logo} alt='' className='logo' id='logo' onClick={() => clearErrors()} />\n                </Link>\n            </div>\n        </>\n    );\n};\n\nexport default Header;\n","import { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport UsersContext from '../context/users/usersContext';\nimport ClientsContext from '../context/clients/clientsContext';\nimport CsvContext from '../context/csv/csvContext';\n\nconst Users = () => {\n    const usersContext = useContext(UsersContext);\n    const clientsContext = useContext(ClientsContext);\n    const csvContext = useContext(CsvContext);\n\n    const { users, getUsers, loading } = usersContext;\n    const { getClients, clients } = clientsContext;\n    const { generateCsv } = csvContext;\n\n    useEffect(() => {\n        getUsers();\n        getClients();\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (clients) {\n            generateCsv(clients);\n        }\n        // eslint-disable-next-line\n    }, [clients]);\n\n    return (\n        <>\n            {users !== null && !loading && (\n                <div className='container'>\n                    <div className='user-grid'>\n                        {users.map(user => (\n                            <Link key={user._id} to={{ pathname: 'clients', state: { user: user } }}>\n                                <div>{user.name}</div>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Users;\n","import { useContext, useEffect } from 'react';\nimport Menu from './Menu';\nimport Users from './Users';\nimport AuthContext from '../context/auth/authContext';\nimport UsersContext from '../context/users/usersContext';\n\nconst Home = () => {\n    const authContext = useContext(AuthContext);\n    const usersContext = useContext(UsersContext);\n\n    const { loadAdmin } = authContext;\n    const { setCurrentUser, currentUser } = usersContext;\n\n    useEffect(() => {\n        loadAdmin();\n        if (currentUser !== null) {\n            setCurrentUser(null);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <>\n            <Menu />\n            <Users />\n        </>\n    );\n};\n\nexport default Home;\n","import { useContext } from 'react';\nimport AuthContext from '../context/auth/authContext';\n\nconst Alerts = () => {\n    const authContext = useContext(AuthContext);\n    const { error } = authContext;\n\n    return error !== null && <div style={{ margin: 'auto', fontSize: '0.8rem' }}>{error[0].msg}</div>;\n};\n\nexport default Alerts;\n","import { useContext, useState, useEffect } from 'react';\nimport AuthContext from '../context/auth/authContext';\nimport Alerts from './Alerts';\n\nconst Login = props => {\n    const authContext = useContext(AuthContext);\n\n    const { login, isAuthenticated } = authContext;\n\n    const [admin, setAdmin] = useState({\n        email: '',\n        password: '',\n    });\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/');\n        }\n        // eslint-disable-next-line\n    }, [isAuthenticated, props.history]);\n\n    const { email, password } = admin;\n\n    const onChange = e => {\n        setAdmin({ ...admin, [e.target.name]: e.target.value });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        login({\n            email,\n            password,\n        });\n    };\n\n    return (\n        <>\n            <div className='dummy'></div>\n            <form className='login-form' onSubmit={onSubmit}>\n                <input type='text' placeholder='Email' name='email' value={email} onChange={onChange} />\n                <input type='password' placeholder='Password' name='password' value={password} onChange={onChange} />\n                <input className='login-btn' type='submit' value='Login' />\n                <Alerts />\n            </form>\n        </>\n    );\n};\n\nexport default Login;\n","import { Link } from 'react-router-dom';\nconst NotFound = () => {\n    return (\n        <>\n            <div className='not-found'>\n                <h3>Page not found.</h3>\n            </div>\n            <div style={{ margin: '0.5rem 12.5% 0' }}>\n                <Link to='/'>↑ Back to Top</Link>\n            </div>\n        </>\n    );\n};\n\nexport default NotFound;\n","import { useContext } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const authContext = useContext(AuthContext);\n    const { isAuthenticated, loading } = authContext;\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                !isAuthenticated && !loading ? (\n                    <Redirect to='/login' />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport AuthState from './context/auth/AuthState';\nimport ClientsState from './context/clients/ClientsState';\nimport CsvState from './context/csv/CsvState';\nimport UsersState from './context/users/UsersState';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\nimport ClientsAll from './components/ClientsAll';\nimport ClientsOverview from './components/ClientsOverview';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport NotFound from './components/NotFound';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    return (\n        <div className='App'>\n            <AuthState>\n                <UsersState>\n                    <ClientsState>\n                        <CsvState>\n                            <Router>\n                                <div className='wrapper'>\n                                    <Header />\n                                    <Switch>\n                                        <PrivateRoute exact path='/' component={Home} />\n                                        <PrivateRoute exact path='/clients' component={ClientsOverview} />\n                                        <PrivateRoute exact path='/all' component={ClientsAll} />\n                                        <Route exact path='/login' component={Login} />\n                                        <Route path='/' component={NotFound} />\n                                    </Switch>\n                                    <Footer />\n                                </div>\n                            </Router>\n                        </CsvState>\n                    </ClientsState>\n                </UsersState>\n            </AuthState>\n        </div>\n    );\n};\n\nexport default App;\n\n// const collapseHeader = () => {\n//     const y = window.scrollY;\n//     const header = document.getElementById('header')\n//     const logo = document.getElementById('logo');\n\n//     console.log(y);\n\n//     if(y > 50) {\n//         // console.log(\"Y position 1: \", y);\n//         // logo.style.padding = '0';\n//         // header.style.minHeight = '75px';\n//     } else {\n//         logo.style.padding = '3rem 0';\n//         header.classList.remove('collapsed');\n//         header.style.minHeight = '176px';\n//     }\n\n// }\n\n// window.addEventListener('scroll', collapseHeader);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}